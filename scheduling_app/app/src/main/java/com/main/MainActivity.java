package com.main;

import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.CalendarView;

import com.google.android.material.bottomnavigation.BottomNavigationView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.view.menu.MenuBuilder;
import androidx.navigation.NavController;
import androidx.navigation.NavDestination;
import androidx.navigation.Navigation;
import androidx.navigation.ui.AppBarConfiguration;
import androidx.navigation.ui.NavigationUI;

import com.main.Caller.LocalDB;
import com.main.Caller.ShiftInfo;
import com.main.databinding.ActivityMainBinding;

import java.util.Date;
import java.util.List;


/*
    Project:    Scheduling App
    Authors:    Taylor Bennett
                Noman Khan
                Mitch Driedger
                Nick Hogan

    File:       MainActivity.java
    Purpose:    Java class for the activity that occurs on the homepage of the application. Sets
                up the navigation bar and tool bar.
*/
public class MainActivity extends AppCompatActivity {
    /*
    Used for displaying this fragment.
     */
    private ActivityMainBinding binding;

    /*
    Function:       onCreate
    Parameters:     Bundle savedInstanceState
    Returns:        void
    Purpose:        - to handle the initialization of the main activity
                    - logic of the calendar is here
                    - logic of menu inflation and database initialization

    Author:         generated by studio, modified by all
    Log (2021-10-23) DRIEDGER:  Moved individual fragment scripting to separate files
    Log (2021-10-23) BENNETT:   Updated with the handleActionToolbar Function
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        binding = ActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        BottomNavigationView navView = findViewById(R.id.nav_view);
        // Passing each menu ID as a set of Ids because each
        // menu should be considered as top level destinations.

        AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(
                R.id.navigation_home,
                R.id.navigation_dashboard,
                R.id.navigation_notifications).build();

        NavController navController = Navigation.findNavController(this,
                R.id.nav_host_fragment_activity_main);
        //NavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);
        NavigationUI.setupWithNavController(binding.navView, navController);

        // Handle updating toolbar component when switching between fragments
        // see the function (handleActionToolbar) for more information
        handleActionToolbar(navController);
    }


    /*
    Function:       handleActionToolbar
    Parameters:     NavController object
    Returns:        void
    Purpose:        - to handle the setting of the toolbar as the actionbar
                    - to manage the updating of the toolbar as navigation between
                    fragments changes.

    Author: Taylor Bennett
    Log (2021-10-20) BENNETT:   Created this function
    Log (2021-10-23) BENNETT:   Updated with the setting and unsetting of group visibility
    */
    private void handleActionToolbar(NavController navController) {
        // Code for actions when Navigation changes between Fragments
        setSupportActionBar(findViewById(R.id.toolbar));   // sets the new toolbar at the top to be active
        navController.addOnDestinationChangedListener(new NavController.OnDestinationChangedListener() {
            // override this function so that things will be updated as the activities change
            @Override
            public void onDestinationChanged(@NonNull NavController controller,
                                             @NonNull NavDestination destination,
                                             @Nullable Bundle arguments) {
                System.out.println("========= CURRENT DEST: [" + destination.toString() + "] =============");
                switch (destination.getId()) {
                    // Navigated to the NOTIFICATIONS Fragment
                    case R.id.navigation_notifications:
                        binding.toolbar.setTitle(getResources().getString(R.string.title_notifications));
                        binding.toolbar.getMenu().setGroupVisible(R.id.group_calendar_items, false);
                        binding.toolbar.getMenu().setGroupVisible(R.id.group_staff_items, false);
                        break;

                    // Navigated to the CALENDAR Fragment
                    case R.id.navigation_home:
                        binding.toolbar.setTitle(getResources().getString(R.string.title_home));
                        binding.toolbar.getMenu().setGroupVisible(R.id.group_calendar_items, true);
                        binding.toolbar.getMenu().setGroupVisible(R.id.group_staff_items, false);
                        break;

                    // Navigated to the STAFF Fragment
                    case R.id.navigation_dashboard:
                        binding.toolbar.setTitle(getResources().getString(R.string.title_dashboard));
                        binding.toolbar.getMenu().setGroupVisible(R.id.group_calendar_items, false);
                        binding.toolbar.getMenu().setGroupVisible(R.id.group_staff_items, true);
                        break;

                    default:

                        return;
                }
            }
        });
    }


    /*
    Function:       onCreateOptionsMenu
    Parameters:     Menu object
    Returns:        Boolean
    Purpose:        - inflates the dropdown menu on the toolbar
    Author:         generated by studio, modified by Taylor Bennett
    Log (2021-10-23) BENNETT:   Created this function
    */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.toolbar_menu, menu);
        return true;
    }


    /*
    Function:       onOptionsItemSelected
    Parameters:     @NonNull MenuItem object
    Returns:        boolean
    Purpose:        - this is where the function logic is for the dropdown menu
                    - each case directs the action of the main activity to the
                    corresponding function, which then handles the navigation to
                    the correct fragment.
    Author:         generated by studio, modified by Taylor Bennett
    Log (2021-10-23) BENNETT:   Created this function
    Log (2021-10-27) BENNETT:   Added the intent and activity creation for all cases
    */
    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        switch (item.getItemId()) {
            case R.id.item_add_shift:
                Intent intent_add_shift = new Intent(this, AddShiftActivity.class);
                startActivity(intent_add_shift);
                return true;
            case R.id.item_edit_shift:
                Intent intent_edit_shift = new Intent(this, EditShiftActivity.class);
                startActivity(intent_edit_shift);
                return true;
            case R.id.item_add_staff:
                Intent intent_add_staff = new Intent(this, AddStaffActivity.class);
                startActivity(intent_add_staff);
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
}